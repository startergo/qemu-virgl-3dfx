QEMU_SRC_DIR=../../../qemu-1
FXLIB=../../fxlib
CROSS=
CC=$(CROSS)gcc
RC=windres
DLLTOOL=dlltool
STRIP=strip
CFLAGS=-march=x86-64-v2 -mtune=generic -O3
CFLAGS+=-pipe -I$(QEMU_SRC_DIR)/hw/mesa -I$(FXLIB) -Wall -Werror -flto=auto -fomit-frame-pointer
LDFLAGS=-static-libgcc
LDFLAGS+=-Wl,--disable-auto-image-base,--no-seh,--dynamicbase,--nxcompat
SRCDIR=../src
TARGET=opengl32.dll
TARGETICD=qmfxgl32.dll
TOOLSTS=wgltest.exe
TOOLSIN=wglinfo.exe
TOOLSGL=wglgears.exe
GENDEF=gendef

C_OBJS:=\
    fxhook.o \
    fxhpat.o \
    fxlib9x.o \
    fxlibnt.o \
    fxtime.o \
    md5.o \

ifdef SOFTGPU
CFLAGS := $(filter-out -flto=auto -march=x86-64-v2 -mtune=generic  -Werror,$(CFLAGS)) -march=pentium2 -mtune=core2
endif

all: fxlib $(TARGET) exports-check $(TOOLSTS)
all+: fxlib $(TARGET) $(TARGETICD) exports-check $(TOOLSTS) $(TOOLSIN) $(TOOLSGL)

exports-check: $(TARGET)
	@if [ $$(objdump -x $(TARGET) | grep "\[[\ 0-9]*\]" | grep -v "^\[" | \
		grep -v -e reloc -e Export\ RVA | wc -l) -ne 2976 ]; \
		then exit 1; fi

$(TARGET): $(C_OBJS) szdata.o wrapgl32.o stamp.o
	@echo "  CFLAGS  $(CFLAGS)"
	@echo "  LDFLAGS $(LDFLAGS)"
	@$(CC) -shared $(CFLAGS) -o $@ $+ $(LDFLAGS)
	@$(GENDEF) - $@ | sed "s/\(@[0-9]*\)@.*/\1/;s/\(^.*\)\(@[0-9]*\)/\1\ =\ \1\2/;s/^mgl/wgl/;s/wgd//" | \
		sed "s/\ ;\ Check!!!.*//;/lto_priv/d;/CallWndProc/d" | \
		grep -e ^LIB -e ^EXP -e " = " > $(@:.dll=.def)
	@echo "  LD  $@"
	@$(CC) -shared $(CFLAGS) -o $@ $(@:dll=def) $+ $(LDFLAGS)

wrapgl32_gears.o: wrapgl32.o

$(TARGETICD): $(C_OBJS) szdata.o wrapgl32_icd.o icddrv.o stamp.o
	@echo "  CFLAGS  $(CFLAGS)"
	@echo "  LDFLAGS $(LDFLAGS)"
	@$(CC) -shared $(CFLAGS) -o $@ $+ $(LDFLAGS)
	@$(GENDEF) - $@ | sed "s/\(@[0-9]*\)@.*/\1/;s/\(^.*\)\(@[0-9]*\)/\1\ =\ \1\2/;/CallWndProc/d;s/^mgl/wgl/;s/wgd//;s/^mgd/Drv/;/^private/d" | \
		sed "s/\ ;\ Check!!!.*//;/lto_priv/d;/CallWndProc/d" | \
		grep -e ^LIB -e ^EXP -e "\ =\ " > $(@:.dll=.def)
	@echo "  LD  $@"
	@$(CC) -shared $(CFLAGS) -o $@ $(@:dll=def) $+ $(LDFLAGS)

$(TOOLSTS):
	@echo "  LD  $@"
	@$(CC) $(CFLAGS) -s -o $@ $(SRCDIR)/wgltest.c $(LDFLAGS) -lgdi32 -lopengl32

$(TOOLSGL):
	@echo "  LD  $@"
	@$(CC) $(CFLAGS) -s -o $@ $(SRCDIR)/wglgears.c $(LDFLAGS) -lgdi32 -lopengl32

$(TOOLSIN):
	@echo "  LD  $@"
	@$(CC) $(CFLAGS) -s -o $@ $(SRCDIR)/wglinfo.c $(LDFLAGS) -lgdi32 -lopengl32


ifndef SOFTGPU
stamp.o:
	@git rev-parse HEAD | sed "s/\(.......\).*/const\ char\ rev_\[\]\ =\ \"\1\-\";/" > /tmp/$(@:o=c)
	@echo -n "  REV $@"; cat /tmp/$(@:o=c) | sed "s/.*rev_\[\]\ =//;s/;//"
	@$(CC) -c -o $@ /tmp/$(@:o=c)

else
stamp.o:
	@echo $(SOFTGPU) | sed "s/\(.......\).*/const\ char\ rev_\[\]\ =\ \"\1\-\";/" > /tmp/$(@:o=c)
	@echo -n "  REV $@"; cat /tmp/$(@:o=c) | sed "s/.*rev_\[\]\ =//;s/;//"
	@$(CC) -c -o $@ /tmp/$(@:o=c)

endif


fxlib:
	@if [ "$$MSYSTEM" != "MINGW32" ]; then echo "Error: MSYSTEM == $$MSYSTEM"; exit 1; fi
	@echo "  CC  $(C_OBJS)"
	@for i in $(C_OBJS); do \
		$(CC) $(CFLAGS) -c -o $$i $(FXLIB)/`echo $$i | sed "s/\.o/\.c/"`; \
	done

%.o: $(SRCDIR)/%.c
	@echo "  CC  $@"
	@$(CC) $(CFLAGS) -c -o $@ $<

clean:
	@rm -f *.o *.def
	@if [ -f $(TARGET) ]; then \
	    $(STRIP) --strip-unneeded $(TARGET); \
	    sh -c 'ls -l $(TARGET)'; \
	    strings $(TARGET) | grep " build "; fi

distclean: clean
	@rm -f $(TARGET) $(TARGETICD) $(TOOLSIN) $(TOOLSGL ) $(TOOLSTS)
